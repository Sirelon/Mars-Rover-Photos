apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'
apply plugin: 'com.google.firebase.firebase-perf'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 28
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    defaultConfig {
        applicationId "com.sirelon.marsroverphotos"
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 14
        versionName "1.3.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.release
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            multiDexEnabled false
            postprocessing {
                removeUnusedCode true
                removeUnusedResources true
                obfuscate true
                optimizeCode true
                proguardFile 'proguard-rules.pro'
            }
        }
        debug {
            multiDexEnabled true
        }
    }
}

dependencies {

    def supportDependencies = [
            design           : "com.google.android.material:material:1.0.0-rc01",
            recyclerView     : "androidx.recyclerview:recyclerview:1.0.0",
            cardView         : "androidx.cardview:cardview:1.0.0",
            appCompat        : "androidx.appcompat:appcompat:1.0.0",
            supportAnnotation: "androidx.annotation:annotation:1.0.0",
            customTabs       : "androidx.browser:browser:1.0.0",
            constraintLayout : "androidx.constraintlayout:constraintlayout:2.0.0-alpha3",
    ]

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.multidex:multidex:2.0.1'
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit:1.3.21'
    testImplementation 'com.nhaarman:mockito-kotlin:1.6.0'
    testImplementation 'org.amshove.kluent:kluent:1.29'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation supportDependencies.values()

    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'

    // Pinch Zoom Library
    implementation 'com.github.chrisbanes:PhotoView:2.1.3'
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.6'

    def retrofitVer = '2.5.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVer"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVer"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVer"

    implementation('com.crashlytics.sdk.android:crashlytics:2.9.9@aar') {
        transitive = true;
    }

    implementation 'com.google.firebase:firebase-core:16.0.7'
    implementation 'com.google.firebase:firebase-ads:17.1.3'
    implementation 'com.google.android.gms:play-services-ads:17.1.3'
    implementation 'com.google.firebase:firebase-crash:16.2.1'
    implementation 'com.google.firebase:firebase-firestore:18.0.1'
    implementation 'com.google.firebase:firebase-perf:16.2.3'

    implementation 'androidx.paging:paging-runtime:2.1.0'

    debugImplementation 'com.readystatesoftware.chuck:library:1.1.0'
    releaseImplementation 'com.readystatesoftware.chuck:library-no-op:1.1.0'
}
apply plugin: 'com.google.gms.google-services'

repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
    google()
}